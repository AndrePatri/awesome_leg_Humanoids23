Reviewer 9 of IROS 2023 submission 2887

Comments to the author
======================

This paper design and implement a single leg system that
uses TO to generate jumping trajectories, during which
several optimal goals are considered including minimizing
energy dissipation and achieving actuator energy
recuperation. The paper has both simulation and hardware
experiments with an open-source code repo. The paper is
easy to follow. But the contributions of the paper are
marginal. 

The authors claim this paper is the first one reasons for
the impact and energy regeneration relationship in jump
maneuvers. This is not true. The first one should be the
Salto robot (Justin Yim’s PhD thesis at Berkeley, Chapter
4). One may argue this paper explores energy regeneration
"explicitly" in its controller, however, notice the Salto
robot is a fully functional mobile robotic system and this
paper only works with a leg on the test stand. The jumping
behavior of a single leg on a test stand may not have the
robot’s whole body controller design. The paper’s approach
of single-leg design, testing environment setup, and
low-level controller implementation are very standard. 
Such development and testing procedures are extensively
used on famous quadrupeds such as StarlETH (Marco Hutter’s
PhD thesis at ETH, Chapter 3) or MIT Cheetah (Paper
"Actuator Design for High Force Proprioceptive Control in
Fast Legged Locomotion", Fig 7). As shown by these previous
research efforts, from single-leg performance to whole-body
controller, there is still a long way to go. 

Adding the energy flow model to landing TO to consider
energy regeneration is novel but the novelty may not lead
to robotic systems that have novel behavior or improved
performance. The key problem is its run time is too slow.
The authors report the takeoff trajectory needs 79+48
iterations to solve, while the landing trajectory needs 856
iterations to solve. The paper does not specify the TO
solver it uses. According to the open-source code repo, the
Horizon tool authors used in the experiment runs IPOPT, a
commonly used nonlinear solver for TO problems. Even with
highly polished implementation on i7 CPU, 856 iterations of
IPOPT can take 1s or longer to run. Considering jumping is
highly dynamic, this solves time is very slow to meet the
usual short replanning time window before and during the
jumping, unless we only use it in a well-controlled
experimental setting instead of a real locomotion setting.
Also, this work only studies a single leg but the actual
legged robot jumping maneuver involves four legs. So the
solver time must be further lengthened for a whole body
system. Therefore the reviewer tends to think that the
reason why no prior work explicitly considers the impact
and energy recuperation relationship (such as the paper
“Real-time Optimal Landing Control of the MIT Mini
Cheetah”) is not because researchers cannot think about it,
but is because it is not useful in practical settings. 

The reviewer would suggest the paper consider landing in a
whole body setting and comparing the trajectory
effectiveness with the paper “Real-time Optimal Landing
Control of the MIT Mini Cheetah”, especially discussing why
energy recuperation is important in this setting. A more
detailed discussion on TO techniques is also necessary, the
focus should be on how to use more advanced TO methods
(such as sparsity exploration or augmented lagrangian, see
“ALTRO: A Fast Solver for Constrained Trajectory
Optimization”) to make the landing trajectory be solved
much faster. 

Lastly, the paper has some minor typos, to name a few:
1.	Fig.7 last sentence should be “brings the required
braking torques lower” instead of “beings the required
braking…”
2.	Line under Eqn. (45) may be “are our optimization
variables” instead of “are out optimization variables”
3.	First sentence of III.C: “Given the scope (of) our
case study”.


Comments on the Video Attachment
================================

The video only contains one hardware result(33s-35s). And
it is confusing to understand. The leg seems to do both
take-off and landing trajectories but the video says it is
"optimal take-off trajectory replay".